;***************************************************************************
;* Martin Osieka: (implementiert durch MH)
;* Der WINX-Patch erlaubt mehr Fenster als je zuvor !!!

;             ;Damit WINX richtig reloziert wird (evtl. 1CAFA)

.WX_VERSION = 220
.WX_DATE    = 1B51 ; 1993/10/17

.WX_QUEUE_SIZE = 500
.WX_QUEUE_OFFSET = 32 ; offsetof(struct PD, p_qaddr)
.WX_MAXWIN = .40

; static BSS
.shifty         = 0E7D
.gl_dcindex     = 6DAE
.gl_ticktime    = 6E18
.TICKS          = 6B1E
.appl_msg       = 701A
.button         = A84C
.rlr            = A792
.gl_mowner      = 7060
.ml_pkown       = 6A8E
.gl_dclick      = 6D62
.ad_stdesk      = 6DC6
.thedesk        = A788
.D              = 745E
.gl_newdesk     = 6E38
.gl_newroot     = 703a
.gl_wtop        = 708c
.gl_rfull       = 700e
.gl_kowner      = 7052
.gl_fake        = 6CEA
.rul            = A796
.gl_bpend       = 6DD6
.gl_pglue       = 7002
.gl_rscreen     = 702C
.gl_awind       = 6E4A
.w_walkflag     = 6E26
.wind_msg       = 7042
.gl_ws          = 70ea
.gl_rzero       = 7074
.ctl_pd         = A7CC
.gl_wbox        = 705A
.gl_hbox        = 6F18
.ad_windspb     = 6DD0
.xrat           = 6CDE
.gl_mntree      = 705C
.ml_ocnt        = 702A
.intin          = 715E


; functions
.wind_update    = 17D0A+.BASE+.d1
.gsx_sclip      = 14612+.BASE+.d1
.bb_screen      = 14862+.BASE+.d1
.gsx_start      = 148ca+.BASE+.d1
.all_run        = 13ce6+.BASE+.d1
.wind_set       = 17d48+.BASE+.d1
.objc_order     = 17c5c+.BASE+.d1
.pinit          = 1413a+.BASE+.d1

.dsptch         = 1CE42+.BASE+.d2
.win_find       = 1C3F4+.BASE+.d2
.win_blt        = 1C988+.BASE+.d2
.wm_update      = 25A92+.BASE+.d2
.ev_mesag       = 1FC98+.BASE+.d2
.ev_mchk        = 1FCE4+.BASE+.d2
.ap_sendmsg     = 24E6C+.BASE+.d2
.gr_dragbox     = 219AC+.BASE+.d2
.gr_slidebox    = 21A66+.BASE+.d2
.gr_stilldn     = 21874+.BASE+.d2
.crysbind       = 1F10C+.BASE+.d2
.rc_intersect   = 25D18+.BASE+.d2
.rc_union       = 25D82+.BASE+.d2
.inside         = 25CCC+.BASE+.d2
.ob_add         = 234F8+.BASE+.d2
.ob_actxywh     = 23826+.BASE+.d2
.gsx_moff       = 21DBE+.BASE+.d2
.gsx_mon        = 21DDA+.BASE+.d2
.ob_draw        = 23366+.BASE+.d2
.ct_chgown      = 1E07C+.BASE+.d2
.gsx_mret       = 21B08+.BASE+.d2
.tak_flag       = 1E59A+.BASE+.d2
.ev_block       = 1FBFC+.BASE+.d2
.take_ownership = 1E1F4+.BASE+.d2
.unsync         = 1E5F8+.BASE+.d2
.gr_setup       = 2191C+.BASE+.d2
.gr_wait        = 218E2+.BASE+.d2
.gsx_ncode      = 21B1E+.BASE+.d2
.win_ontop      = 1C47A+.BASE+.d2
.win_top        = 1c430+.BASE+.d2
.desk_verify    = 1A13C+.BASE+.d2
.close_window   = 1AD22+.BASE+.d2
.ob_find        = 233E6+.BASE+.d2
.ap_rdwr        = 1F958+.BASE+.d2


; offsets in desktop structure
.g_pscreen = .24108

; patch addresses
.WINXCOL  = 17B7C+.d1
.WINXRUN  = 1A22C+.d2
.WINXHMS1 = 1B878+.d2
.WINXHMSG = 1B8CE+.d2
.WINXBLT  = 1CA1A+.d2
.WINXARR  = 1CBE0+.d2
.WINXPROC = 1DC22+.d2
.WINXHCTL = 1DC8E+.d2
.WINXDOWN = 1E826+.d2
.WINXFAPD = 1EABA+.d2
.WINXNAME = 1EC12+.d2
.WINXRUL  = 1EE1E+.d2
.WINXXIF  = 1F894+.d2
.WINXWM   = 244EC+.d2
.WINXTAB  = 2B802+.d3
.WINXTICK = 26514+.d2



; in bb_fill
14A5C+.d1 $61,00,.WINXRUN+20-~.W ; bsr $FDA24C -> wx_fill

; in app_blddesk
159AE+.d1 $3E,BC,34,DB    ; move.w #$34DB,(a7)
        ~ $4E,71          ; nop

; disable evnt_dclick call in desktop
17AB0+.d1 $4E,75

; replace unused graf_handle by a helper function to initialize the window colors
.WINXCOL
+winxcol.fil   ; 17B7C - 17BA4 (28)

;optimize get_xywh() to make room for a small helper function
.WINXRUN
+winxrun.fil   ; 1A22C - 1A26A (3E)

; in hd_msg
.WINXHMS1
+winxhms1.fil  ; 1B878 - 1B896 (1E)

; in hd_msg
.WINXHMSG
+winxhmsg.fil  ; 1B8CE - 1B922 (54)

; in win_blt
.WINXBLT
+winxblt.fil   ; 1CA1A - 1CB34 (11A)

; fix win_arrow in desktop
.WINXARR
+winxarr.fil   ; 1CBE0 - 1CC68 (88)

; Fix in iasync()
1D7CC+.d2
~ $F7,7C             ; jsr ev_mchk
~ $4E,71,4E,71       ; nop; nop
~ $50,8F             ; addq.l    #8,a7
~ $4A,40             ; tst.w      d0
  _FILL ~,~+10,$4E71.W

; fix in cre_aproc
.WINXPROC
+winxproc.fil        ; 1DC22 - 1DC5E (3C)

; replace ct_msg() & hctl_window()
.WINXHCTL
+winxhctl.fil      ; 1DC8E - 1DFCC (33E)

; Fix in ct_chgown
1E0B4+.d2
~ $23,EE,00,08,.gl_kowner.L  ; move.l     8(a6),gl_kowner
~ $F0,01                     ; movem.l    (a7)+,#0
~ $43,F9,.gl_fake.L          ; lea.l      gl_fake,a1
~ $4A,51                     ; tst.w      (a1)
~ $67,00,1DCD2+.d2-~.W       ; beq        $00FDDCD2
~ $53,51                     ; subq.w     #1,(a1)
~ $4E,75                     ; rts

; ctlmgr(): change parameter for ev_multi()
1E0F2+.d2
~ $61,00,.WINXWM+986-~.W     ; bsr        w_setactive
~ $4E,71
~ $42,A7                     ; clr.l      -(a7)
~ $2F,3C,01,02,03,00         ; move.l     #$01020300,-(a7)

1E3F8+.d2
~ $61,00,1E7B0+.d2-~.W       ; bsr        $00FDE7B0

; amutex(): call wx_evinsert() from WINXBLT.FIL
1E5EA+.d2 $4E,B9,.WINXBLT+104+.BASE.L ; jsr wx_evinsert

; in bchange
1E748+.d2 $4E,B9,.WINXWM+152C+.BASE.L ; jsr $FE5A18

; in bchange
1E798+.d2
~ $70,FF        ; moveq.l    #-1,d0
~ $60,0C        ; bra.s      $00FDE7A8
~ $4E,71,4E,71  ; nop nop

; in bchange
1E7A8+.d2
~ $61,00,.WINXWM+EBE-~.W       ; bsr        $FE53AA
~ $60,00,00,1E                 ; bra.w      $FDE7CC
~ $43,F9,1E730+.d2+.BASE.L     ; lea.l      bchange,a1
~ $20,55                       ; movea.l    (a5),a0
~ $20,11                       ; move.l     (a1),d0
~ $B0,90                       ; cmp.l      (a0),d0
~ $66,02                       ; bne.s      $00FDE7C0
~ $20,49                       ; movea.l    a1,a0
~ $4E,D0                       ; jmp        (a0)

; replace downorup()
.WINXDOWN      ; 1E826 - 1E862 (3C)
 +winxdown.fil

; replace fapd()
.WINXFAPD      ; 1EABA - 1EB0A (50)
 +winxfapd.fil

;p_nameit: optimized version to insert call to wx_nameit()
.WINXNAME      ; 1EC12 - 1EC3E (2C)
  +winxname.fil

; doq: change access to appl specific message buffer
1ECB8+.d2
~ $26,6B,.WX_QUEUE_OFFSET.W     ;movea.l p_qaddr(a3),a3
~ $D6,C0           ;adda.w d0,a3
~ $4E,71,4E,71     ;nop;nop
1ECCE+.d2
~ $28,6C,.WX_QUEUE_OFFSET.W     ;movea.l p_qaddr(a4),a4
~ $D8,C6           ;adda.w d6,a4
~ $4E,71           ;nop

; aqueue: changed QUEUE_SIZE
1ED64+.d2 $30,3C,.WX_QUEUE_SIZE.W    ;move.w #$0500,d0

.WINXRUL   ; 1EE1E - 1F0E6 (2C8)
 +winxrul.fil

;
; optimize xif(), to make room for appl_getinfo() check
;
.WINXXIF
 +winxxif.fil   ; 1F894 - 1F934 (A0)

; fm_dial(): new address for w_drawdesk()
208FC+.d2
~ $61,00,.WINXWM+658-~.W     ; bsr        $00FE4B44
~ $60,00,00,08               ; bra.w      $00FE090A

; gr_stilldn(): support for button modes
2187C+.d2
~ $4E,B9,.WINXWM+1548+.BASE.L

; mn_clsda(): new address for ap_sendmsg()
224F6+.d2
~ $61,00,.WINXWM+8-~.W       ; bsr        ap_send0
~ $4E,71,4E,71

; sh_main(): insert calls to all_run
24352+.d2
~ $4E,B9,.WINXRUN+26+.BASE.L    ; jsr $FDA252
~ $42,6e,ff,fc                  ; clr.w     -4(a6)
~ $50,F9,.gl_bpend.L            ; st gl_bpend

; sh_main(): new address for wm_start()
2439A+.d2
~ $61,00,.WINXWM+FE2-~.W  ; bsr        $00FE54CE

;
; replacements for all window manager functions
;
.WINXWM   ; 244EC - 25B9E (16B2)
+winxwm.fil

; overwrite code of delay with a helper function for hctl_window
.WINXTICK
+winxtick.fil

_IF .RSC
; wegen NEWRSC
277CA+.d2
~      $20,40                 ; movea.l   d0,a0
~      $4E,B9,.WINXBLT+6C+.BASE.L   ; jsr       $00FDCA86
~      $21,C0,.gl_pglue.W     ; move.l    d0,(gl_pglue).w
~      $4A,B8,.gl_pglue.W     ; tst.l     (gl_pglue).w
_ELSE
; Original
277C4+.d2  $30,2D,00,04            ; move.w    4(a5),d0
~      $4E,B9,.WINXBLT+6A+.BASE.L   ; jsr       $00FDCA84
_ENDIF

; several tables   ; 2B802 - 2B880 (7E)
.WINXTAB
+winxtab.fil

; linef table: new address for wm_get
2798C+.d2 $.WINXWM+10E8+.BASE.L
; linef table: new address for wm_set
~         $.WINXWM+1268+.BASE.L
; linef table: new address for wm_calc
~         $.WINXWM+1486+.BASE.L
; linef table: new address for wm_create
27A2C+.d2 $.WINXWM+C9C+.BASE.L
; linef table: new address for wm_open
~         $.WINXWM+DAC+.BASE.L
; linef table: new address for wm_close
~         $.WINXWM+E38+.BASE.L
; linef table: new address for wm_delete
~         $.WINXWM+E10+.BASE.L
; linef table: new address for wm_find
~         $.WINXWM+13D2+.BASE.L
; linef table: new address for wm_update
~         $.WINXWM+1408+.BASE.L
; linef table: new address for wm_new
~         $.WINXWM+15B8+.BASE.L
; linef table: new address for crysbind
27A70+.d2 $.WINXXIF+70+.BASE.L
; linef table: new address for wm_update
27ABC+.d2 $.WINXWM+1408+.BASE.L
; linef table: new address for wm_update
27AC8+.d2 $.WINXWM+1408+.BASE.L
; linef table: new address for wm_update
~         $.WINXWM+1408+.BASE.L
; linef table: new address for wm_update
27AE4+.d2 $.WINXWM+1408+.BASE.L
; linef table: new address for hctl_button
28000+.d2 $1E0BE+.d2+.BASE.L
; linef table: new address for wm_start
280D8+.d2 $.WINXWM+F86+.BASE.L

; wind_close: new address for wm_close()
17CEC+.d1 $41,F9,.WINXWM+E38+.BASE.L  ; lea wx_close,a0
; wind_delete: new address for wm_delete()
17CF6+.d1 $41,F9,.WINXWM+E10+.BASE.L  ; lea wx_delete,a0
; wind_find: new address for wm_find()
17D00+.d1 $41,F9,.WINXWM+13D2+.BASE.L ; lea wx_find,a0
; wind_update: new address for wm_update()
17D0A+.d1 $41,F9,.WINXWM+1408+.BASE.L ; lea wx_update,a0
; wind_create: new address for wm_create()
17D14+.d1 $41,F9,.WINXWM+C9C+.BASE.L  ; lea wx_create,a0
; wind_open: new address for wm_open()
17D2A+.d1 $41,F9,.WINXWM+DAC+.BASE.L  ; lea wx_open,a0

;***************************************************************************
;* end of WiNX patch
